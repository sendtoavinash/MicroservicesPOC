apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgresql-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: manual
  hostPath:
#    path: "/mnt/data"  # - for Unix/Linux
     path: "/run/desktop/mnt/host/c/temp/testfiles"
     type: DirectoryOrCreate
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-pvc
spec:
  resources:
    requests:
      storage: 1Gi
  storageClassName: manual
  accessModes:
    - ReadWriteOnce


---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
spec:
  selector:
    matchLabels:
      app: postgresql
  serviceName: postgresql
  replicas: 1
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: bitnami/postgresql:14.9.0-debian-11-r50
        env:
        - name: SQL_ROOT_PASSWORD
          value: root        
        ports:
        - containerPort: 3306
          name: postgresql
        volumeMounts:
        - name: postgresql-initdb
          mountPath: /docker-entrypoint-initdb.d
        - name: postgresql-persistent-storage
          mountPath: /var/lib/postgresql
      volumes:
        - name: postgresql-initdb
          configMap:
            name: postgresql-initdb-cm
        - name: postgresql-persistent-storage
          persistentVolumeClaim:
            claimName: postgresql-pvc

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-initdb-cm
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS orderdb;
    CREATE DATABASE IF NOT EXISTS paymentdb;
    CREATE DATABASE IF NOT EXISTS productdb;


---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
spec:
  clusterIP: None
  selector:
    app: postgresql
  ports:
  - port: 3306